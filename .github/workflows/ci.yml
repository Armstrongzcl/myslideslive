name: CI ☯️
on: [push, pull_request]
jobs:
  build-n-test:
    name: Run Continuous Integration ☯️ scripts
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code 🛎️
      uses: actions/checkout@v2.3.1
    - name: Set up Python 3.6 🐍
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
        architecture: x64
    - name: Install build dependencies 💾
      run: |
        sudo apt-get install ffmpeg
        pip install nbdev jupyter
    - name: Check readability of all notebooks 📖
      run: nbdev_read_nbs
    - name: Build 🏗️ and install 💽 the library
      run: |
        nbdev_build_lib
        pip install -e .
    - name: Check cleanliness of all notebooks 🛁
      run: |
        echo "Check we are starting with clean git checkout"
        if [ -n "$(git status -uno -s | grep -v 'myslideslive/__init__.py')" ]; then echo "git status is not clean"; false; fi
        echo "Trying to strip out notebooks"
        nbdev_clean_nbs
        echo "Check that strip out was unnecessary"
        git status -s # display the status to see which nbs need cleaning up
        if [ -n "$(git status -uno -s | grep -v 'myslideslive/__init__.py')" ]; then echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_git_hooks"; false; fi
    - name: Check for library--notebooks divergence ⚔️
      run: |
        if [ -n "$(nbdev_diff_nbs)" ]; then echo -e "!!! Detected difference between the notebooks and the library"; false; fi
    - name: Run tests 🧪
      run: nbdev_test_nbs

  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    runs-on: ubuntu-18.04
    needs: [build-n-test]
    steps:
    - name: Checkout code 🛎️
      uses: actions/checkout@v2.3.1
    - name: Set up Python 3.6 🐍
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
        architecture: x64
    - name: Install build dependencies 💾
      run: |
        pip install nbdev jupyter
        pip install wheel
    - name: Build a binary wheel and a source tarball distributions 📦
      run: python setup.py bdist_wheel sdist
    - name: Publish distribution 📦 to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
